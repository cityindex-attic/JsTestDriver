$Id: COMPILE,v 1.5 2003/12/29 03:58:33 dfs Exp $

The Jakarta-ORO library follows the same build procedure as other
Jakarta projects, relying on the Ant build system.  You can learn more
about the Ant build system from http://jakarta.apache.org/.  If
you don't have Ant installed on your system, you must download and
install it to compile the software.

By default, build.xml will build a jar file containing the library.
Optionally, you can pass one of the following build targets as an
argument to Ant:
	 lib	      - builds the library
	 examples     - builds the example programs
	 examples-awk - builds the org.apache.oro.text.awk examples
	 tools        - builds the utility programs
	 jar          - builds a jar file containing the class library
	 javadocs     - builds the API documentation
	 package      - builds a source distribution package
	 package-zip  - builds a distribution package stored as a zip file
	 package-tgz  - builds a distribution package stored as a
			gzipped tar file (.tar.gz)
	 clean        - removes all files generated by build targets

All generated class files are stored in a classes/ directory.  All
documentation is stored in a doc/ directory.

Examples:
	To build only the library use:

	   ant lib

	To build only the javadocs use:

	   ant javadocs

NOTE FOR DEVELOPERS
-------------------

As of 2003/12/28, all generated documentation under the docs/ tree is
stored in CVS.  This is done so that the infrastructure team can
regenerate project pages without having to build individual software
distributions.  Therefore, after you make changes in xdocs or update
the demo applet, you must do a checkin of any updated or new artifacts
in the docs/ tree.  First do an 'ant docs' and then do the requisite
checkins.  Do not directly edit any of the files under the docs/
tree.  They are to be generated from the source under xdocs.

